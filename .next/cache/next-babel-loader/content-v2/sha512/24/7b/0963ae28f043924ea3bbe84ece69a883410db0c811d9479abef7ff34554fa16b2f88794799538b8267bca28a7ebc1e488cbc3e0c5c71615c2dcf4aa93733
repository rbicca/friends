{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kuka/Training/NextJS/max02/pages/[mid]/index.js\";\n//import { DATA } from '../index'\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    data: props.meetupData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://uHerval:herval@cluster0.ubhpk.mongodb.net/maxnext?retryWrites=true&w=majority');\n  const db = client.db();\n  const eventos = db.collection('eventos');\n  const data = await eventos.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: data.map(e => ({\n      params: {\n        mid: e._id.toString()\n      }\n    })) //paths: [\n    //    { params: { mid: 'm1' } },\n    //    { params: { mid: 'm2' } },\n    //]\n\n  };\n}\nexport async function getStaticProps(ctx) {\n  const id = ctx.params.mid; //console.log(id);\n\n  const client = await MongoClient.connect('mongodb+srv://uHerval:herval@cluster0.ubhpk.mongodb.net/maxnext?retryWrites=true&w=majority');\n  const db = client.db();\n  const eventos = db.collection('eventos');\n  const data = await eventos.findOne({\n    _id: id\n  });\n  return {\n    props: {\n      meetupData: data.map(e => ({\n        title: e.title,\n        address: e.address,\n        image: e.image,\n        description: e.description,\n        id: e._id.toString()\n      }))\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/kuka/Training/NextJS/max02/pages/[mid]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetupData","getStaticPaths","client","connect","db","eventos","collection","data","find","_id","toArray","fallback","paths","map","e","params","mid","toString","getStaticProps","ctx","id","findOne","title","address","image","description"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI,QAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,KAAK,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;AAOA,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,6FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,OAAO,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhB;AACA,QAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,CAAa,EAAb,EAAiB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAjB,EAA4BC,OAA5B,EAAnB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,IAAI,CAACM,GAAL,CAASC,CAAC,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF,CAAC,CAACL,GAAF,CAAMQ,QAAN;AAAP;AAAV,KAAL,CAAV,CAFJ,CAIH;AACA;AACA;AACA;;AAPG,GAAP;AASH;AAED,OAAO,eAAeC,cAAf,CAA8BC,GAA9B,EAAkC;AACrC,QAAMC,EAAE,GAAGD,GAAG,CAACJ,MAAJ,CAAWC,GAAtB,CADqC,CAErC;;AACA,QAAMd,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,6FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,OAAO,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhB;AACA,QAAMC,IAAI,GAAG,MAAMF,OAAO,CAACgB,OAAR,CAAgB;AAAEZ,IAAAA,GAAG,EAAEW;AAAP,GAAhB,CAAnB;AAGA,SAAO;AACHrB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAEO,IAAI,CAACM,GAAL,CAASC,CAAC,KAAK;AACvBQ,QAAAA,KAAK,EAAER,CAAC,CAACQ,KADc;AAEvBC,QAAAA,OAAO,EAAET,CAAC,CAACS,OAFY;AAGvBC,QAAAA,KAAK,EAAEV,CAAC,CAACU,KAHc;AAIvBC,QAAAA,WAAW,EAAEX,CAAC,CAACW,WAJQ;AAKvBL,QAAAA,EAAE,EAAEN,CAAC,CAACL,GAAF,CAAMQ,QAAN;AALmB,OAAL,CAAV;AADT;AADJ,GAAP;AAWH;AAED,eAAenB,aAAf","sourcesContent":["//import { DATA } from '../index'\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = (props) => {\n    return (\n        <MeetupDetail data={props.meetupData} />\n    );\n};\n\n\nexport async function getStaticPaths(){\n    const client = await MongoClient.connect('mongodb+srv://uHerval:herval@cluster0.ubhpk.mongodb.net/maxnext?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const eventos = db.collection('eventos');\n    const data = await eventos.find({}, { _id: 1}).toArray();\n\n    return {\n        fallback: false,\n        paths: data.map(e => ({ params: { mid: e._id.toString() } }))\n        \n        //paths: [\n        //    { params: { mid: 'm1' } },\n        //    { params: { mid: 'm2' } },\n        //]\n    };\n}\n\nexport async function getStaticProps(ctx){\n    const id = ctx.params.mid;\n    //console.log(id);\n    const client = await MongoClient.connect('mongodb+srv://uHerval:herval@cluster0.ubhpk.mongodb.net/maxnext?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const eventos = db.collection('eventos');\n    const data = await eventos.findOne({ _id: id});\n\n\n    return {\n        props: {\n            meetupData: data.map(e => ({\n                title: e.title,\n                address: e.address,\n                image: e.image,\n                description: e.description,\n                id: e._id.toString()\n            }))\n        }\n    };\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}